<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:cache="http://www.springframework.org/schema/cache" xmlns:p="http://www.springframework.org/schema/p"
  xsi:schemaLocation="http://www.springframework.org/schema/beans 
     http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
     http://www.springframework.org/schema/aop
     http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
     http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context-4.0.xsd
     http://www.springframework.org/schema/tx
     http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
     http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.0.xsd"
     default-lazy-init="true">

    <bean id="readDataSource1" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">     
      <!-- 基本属性 url、user、password -->  
      <property name="url" value="jdbc:mysql://localhost:3306/wlsq" />  
      <property name="username" value="root" />  
      <property name="password" value="123456" />  
      
      <!-- 配置初始化大小、最小、最大 -->  
      <property name="initialSize" value="1" />  
      <property name="minIdle" value="1" />   
      <property name="maxActive" value="20" />  
  
      <!-- 配置获取连接等待超时的时间 -->  
      <property name="maxWait" value="60000" />  
  
      <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->  
      <property name="timeBetweenEvictionRunsMillis" value="60000" />  
  
      <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->  
      <property name="minEvictableIdleTimeMillis" value="300000" />  
  
      <property name="validationQuery" value="SELECT 'x'" />  
      <property name="testWhileIdle" value="true" />  
      <property name="testOnBorrow" value="false" />  
      <property name="testOnReturn" value="false" />  
  
      <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->  
      <property name="poolPreparedStatements" value="true" />  
      <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />  
  
      <!-- 配置监控统计拦截的filters -->  
      <property name="filters" value="stat" />   
    </bean>  
      
    <bean id="writeDataSource1" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">    
      <!-- 基本属性 url、user、password -->  
      <property name="url" value="jdbc:mysql://localhost:3306/wlsqs" />  
      <property name="username" value="root" />  
      <property name="password" value="123456" />  
  
      <!-- 配置初始化大小、最小、最大 -->  
      <property name="initialSize" value="1" />  
      <property name="minIdle" value="1" />   
      <property name="maxActive" value="20" />  
  
      <!-- 配置获取连接等待超时的时间 -->  
      <property name="maxWait" value="60000" />  
  
      <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->  
      <property name="timeBetweenEvictionRunsMillis" value="60000" />  
  
      <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->  
      <property name="minEvictableIdleTimeMillis" value="300000" />  
  
      <property name="validationQuery" value="SELECT 'x'" />  
      <property name="testWhileIdle" value="true" />  
      <property name="testOnBorrow" value="false" />  
      <property name="testOnReturn" value="false" />  
  
      <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->  
      <property name="poolPreparedStatements" value="true" />  
      <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />  
  
      <!-- 配置监控统计拦截的filters -->  
      <property name="filters" value="stat" />   
    </bean>  
  
    <bean id="dataSource" class="com.webapp.framework.core.common.datasource.DynamicDataSource">  
        <property name="targetDataSources">      
          <map key-type="java.lang.String">      
              <!-- write -->    
             <entry key="write" value-ref="writeDataSource1"/>      
             <!-- read -->    
             <entry key="read" value-ref="readDataSource1"/>      
          </map>               
        </property>   
        <property name="defaultTargetDataSource" ref="readDataSource1"/>      
    </bean>  
    
    
    
    
    
    
    
    
    
    
    
    
    
</beans>
